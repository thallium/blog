<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>字符串/String on Thallim&#39;s Blog</title>
    <link>https://blog.thallium.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/string/</link>
    <description>Recent content in 字符串/String on Thallim&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://blog.thallium.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/string/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>题解/Tutorial 2018-2019 ACM-ICPC, Asia Nanjing Regional Contest M - Mediocre String Problem</title>
      <link>https://blog.thallium.com/post/2020-07-09-gym101981m/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.thallium.com/post/2020-07-09-gym101981m/</guid>
      <description>Solution First, count how many palindromes begin with $s_i$ and let the number be $f_i$. Then, find the maximum length $d$ such that $s_{i - k} = t_k$ for each k = 1, 2, &amp;hellip;, d and let the length be $g_i$. The answer should be $\sum_{i=1}^{\lvert S\rvert}f_i\cdot g_i$. The first part can be solved using manacher algorithm, and the second part is equivalent to calculate the longest common prefix (LCP) for every suffix of the reversed string $s$ with $t$, which can be solved using Z algorithm. Code #include &amp;lt;bits/stdc++.h&amp;gt; #define forn(i, n) for (int i = 0; i</description>
    </item>
    
  </channel>
</rss>
