<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>构造/Constructive Alg on Thallim&#39;s Blog</title>
    <link>https://blog.thallium.com/tags/%E6%9E%84%E9%80%A0/constructive-alg/</link>
    <description>Recent content in 构造/Constructive Alg on Thallim&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://blog.thallium.com/tags/%E6%9E%84%E9%80%A0/constructive-alg/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Codeforces 1059C - Sequence Transformation</title>
      <link>https://blog.thallium.com/post/2020-01-13-cf1059c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.thallium.com/post/2020-01-13-cf1059c/</guid>
      <description>题意： 定义如下序列的变换（由一个已知序列生成另一个序列）： 如果序列是空的则停止，否则在新序列的最后加上当前序列所有元素的gcd，然后从原序列中移除一个元素。重复上述操作直到停止，问能得到的最大字典序的</description>
    </item>
    
    <item>
      <title>Codeforces 1282D - Enchanted Artifact</title>
      <link>https://blog.thallium.com/post/2020-01-06-cf1282d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.thallium.com/post/2020-01-06-cf1282d/</guid>
      <description>InTerEStinG. Solution First, we could find the number of &amp;lsquo;a&amp;rsquo; and &amp;lsquo;b&amp;rsquo; by using two strings consisting 300 &amp;lsquo;a&amp;rsquo;s and 300 &amp;lsquo;b&amp;rsquo;s. Then we got $num_a=q_a$ and $q_b$ and the number of &amp;lsquo;a&amp;rsquo; is $300-q_a$ and the number of &amp;lsquo;b&amp;rsquo; is $num_b=300-q_b$ thus the length of the answer $len$ is simply their sum. Let the answer be filled with &amp;lsquo;a&amp;rsquo; first. If we replace any digit with &amp;lsquo;b&amp;rsquo; and query, we will get either $num_b-1$ or $num_b+1$. If we get $num_b-1$ that means that digit should be &amp;lsquo;b&amp;rsquo; otherwise it should be &amp;lsquo;a&amp;rsquo;. Do the procedure above for every digits</description>
    </item>
    
    <item>
      <title>Codeforces 1285D - Dr. Evil Underscores</title>
      <link>https://blog.thallium.com/post/2020-01-10-cf1285d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.thallium.com/post/2020-01-10-cf1285d/</guid>
      <description>Almost Solution Let&amp;rsquo;s start with the highest bit since it&amp;rsquo;s the most significant. We need to divide elements into two groups, one with elements which is $1$ on this bit and the other with elements which is $0$ on this bit. If either group is empty, we can always assign 0 or 1 to this bit to make this bit 0 in the answer and we can just proceed to the next bit, otherwise this bit is always 1. In order to know which value to assign we will solve the same problem recursively for each of the groups for</description>
    </item>
    
  </channel>
</rss>
