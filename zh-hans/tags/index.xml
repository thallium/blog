<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tags on Thallium的博客</title><link>https://blog.tgc-thallium.com/zh-hans/tags/</link><description>Recent content in Tags</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>Page(/tags) (Gengchen)</managingEditor><lastBuildDate>Fri, 21 May 2021 21:55:47 -0400</lastBuildDate><atom:link href="/zh-hans/tags/" rel="self" type="application/rss+xml"/><item><title>CodeForces 813E - Army Creation题解</title><link>https://blog.tgc-thallium.com/zh-hans/cf813e/</link><pubDate>Fri, 21 May 2021 21:55:47 -0400</pubDate><guid>https://blog.tgc-thallium.com/zh-hans/cf813e/</guid><description>&lt;p>很神奇的技巧&lt;/p></description></item><item><title>使用自定义头文件在算法竞赛中辅助本地调试</title><link>https://blog.tgc-thallium.com/zh-hans/debug_output_header/</link><pubDate>Fri, 21 May 2021 20:22:27 -0400</pubDate><guid>https://blog.tgc-thallium.com/zh-hans/debug_output_header/</guid><description>算法竞赛中主要有两种调试方式：调试器(debugger)和直接输出。调试器适合查看少量或者特定位置的信息，但可能比较费时间并且如果错过了某些信息就要重新运行,而且必须要吐槽gdb输出二维数组全挤在一行根本没法看；而直接输出适合跟踪大量的信息，并且可以方便的查看之前的信息，缺点就是需要在代码中添加额外的语句（可能会很多）并且要在提交之前删掉（即便是输出到标准错误流也会影响性能）。一种解决办法就是使用提前写好的代码/头文件，并结合#ifdef宏和命令行define参数实现区分本地和评测环境，让调试代码在环境中失效。
输出我直接用的现成的pretty printer，然后在代码中加入如下语句：
#ifdef LOCAL #include&amp;lt;pprint.hpp&amp;gt; // https://github.com/p-ranav/pprintpprint::PrettyPrinter P(cerr); #define de(...) P.compact(true);P.print(__VA_ARGS__) #define de_nc(...) P.compact(false);P.print(__VA_ARGS__) #else #define de(...) #define de_nc(...) #endif 注意需要把头文件的目录加到CPLUS_INCLUDE_PATH环境变量里，或者使用-I标记。变异时加上-DLOCAL标记以j定义LOCAL，可以换成其他的词，只要保证oj里没有这个标记就行。</description></item><item><title>Google Code Jam 2021 R2 Matrygons题解</title><link>https://blog.tgc-thallium.com/zh-hans/gcj2021_r2_matrygons/</link><pubDate>Sat, 15 May 2021 16:39:16 -0400</pubDate><guid>https://blog.tgc-thallium.com/zh-hans/gcj2021_r2_matrygons/</guid><description>&lt;p>比赛的时候想错方向了😞&lt;/p></description></item><item><title>树和DAG的最小路径覆盖问题</title><link>https://blog.tgc-thallium.com/zh-hans/minimum_path_cover/</link><pubDate>Sat, 08 May 2021 11:25:50 -0400</pubDate><guid>https://blog.tgc-thallium.com/zh-hans/minimum_path_cover/</guid><description>&lt;p>路径覆盖是一个路径的集合使得每个顶点都只被一条路径覆盖。最小路径覆盖问题要求集合中路径的条数是最小的。&lt;/p></description></item><item><title>用长为2的路径覆盖所有边</title><link>https://blog.tgc-thallium.com/zh-hans/cover_edges_with_path_of_length_two/</link><pubDate>Wed, 05 May 2021 23:20:52 -0400</pubDate><guid>https://blog.tgc-thallium.com/zh-hans/cover_edges_with_path_of_length_two/</guid><description>&lt;p>貌似还挺经典的一个问题&lt;/p></description></item><item><title>一些数学模型</title><link>https://blog.tgc-thallium.com/zh-hans/math_model/</link><pubDate>Wed, 05 May 2021 22:34:22 -0400</pubDate><guid>https://blog.tgc-thallium.com/zh-hans/math_model/</guid><description>&lt;p>总结一些常见的数学模型。&lt;/p></description></item><item><title>2020 ICPC East Central NA Regional Contest 总结与题解</title><link>https://blog.tgc-thallium.com/zh-hans/2020_icpc_ecna/</link><pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.tgc-thallium.com/zh-hans/2020_icpc_ecna/</guid><description>&lt;p>算是有所进步但还是稍有遗憾，差一题就能进division championships.&lt;/p>
&lt;p>更新：所有7题队都以wildcard的身份晋级&lt;abbr title="North America Division Championships">NADC&lt;/abbr>了，而且如果本学校只有wildcard队的话，会被分到最弱的central division，然后我们又莫名其妙的拿了个第6，晋级&lt;abbr title="North America Championships">NAC&lt;/abbr>了😂&lt;/p></description></item><item><title>题解 2018 ICPC Asia Singapore Regional Contest</title><link>https://blog.tgc-thallium.com/zh-hans/2018_icpc_singapore/</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://blog.tgc-thallium.com/zh-hans/2018_icpc_singapore/</guid><description>&lt;p>&lt;a href="https://www.comp.nus.edu.sg/~acmicpc/">官方英文题解&lt;/a>&lt;/p></description></item><item><title>题解 2019 ICPC East Central North American(ECNA) Regional Contest K - Where Have You Bin</title><link>https://blog.tgc-thallium.com/zh-hans/2019_ecna_k/</link><pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate><guid>https://blog.tgc-thallium.com/zh-hans/2019_ecna_k/</guid><description>&lt;p>感觉挺套路的，但当时太菜了不会做，是道不错的题&lt;/p></description></item><item><title>题解 Codeforces 56E - Domino Principle</title><link>https://blog.tgc-thallium.com/zh-hans/cf56e/</link><pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate><guid>https://blog.tgc-thallium.com/zh-hans/cf56e/</guid><description>&lt;p>单调栈好题，非常独特的视角。&lt;/p></description></item></channel></rss>